{
  "openapi": "3.0.1",
  "info": {
    "title": "Firm Web API",
    "version": "v1"
  },
  "paths": {
    "/Cities/count": {
      "get": {
        "tags": [
          "Cities"
        ],
        "summary": "returns number of cities satisfying filter (by city name)",
        "operationId": "CitiesNumber",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Optional filter for city name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/Cities": {
      "get": {
        "tags": [
          "Cities"
        ],
        "summary": "Get all cities (optionally filtered by city name)\r\nNo of cities, order, and starting city are determined using LoadParams",
        "operationId": "GetCities",
        "parameters": [
          {
            "name": "jtStartIndex",
            "in": "query",
            "description": "Starting row index (i.e. how many rows to skip)",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "jtPageSize",
            "in": "query",
            "description": "Number of elements to return",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "jtSorting",
            "in": "query",
            "description": "Name of a column. Must be same as in corresponding DTO object, case insensitive",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Global filter parameter",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CityViewModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CityViewModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CityViewModel"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cities"
        ],
        "summary": "Adds new city",
        "operationId": "AddCity",
        "requestBody": {
          "description": "city data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CityViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CityViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CityViewModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Cities/{id}": {
      "get": {
        "tags": [
          "Cities"
        ],
        "summary": "Get city by id (note: this is not postal code, but it's primary key)",
        "operationId": "GetCityById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "city id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CityViewModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CityViewModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CityViewModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Cities"
        ],
        "summary": "Delete city base on its primary key",
        "operationId": "DeleteCity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Value of the primary key (i.e., CityId)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "if the city is deleted"
          },
          "404": {
            "description": "if city does not exists",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Cities"
        ],
        "summary": "Updates city",
        "operationId": "UpdateCity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "city identifier (i.e., primary key)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "City data. id from route, and id from the model must match",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CityViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CityViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CityViewModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Lookup/Countries": {
      "get": {
        "tags": [
          "Lookup"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OptionsResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptionsResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptionsResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Lookup"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OptionsResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptionsResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptionsResult"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CityViewModel": {
        "type": "object",
        "properties": {
          "CityId": {
            "type": "integer",
            "format": "int32"
          },
          "PostalCode": {
            "type": "integer",
            "format": "int32"
          },
          "CityName": {
            "type": "string",
            "nullable": true
          },
          "PostalName": {
            "type": "string",
            "nullable": true
          },
          "CountryCode": {
            "type": "string",
            "nullable": true
          },
          "CountryName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OptionsResult": {
        "type": "object",
        "properties": {
          "Result": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TextValue"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "TextValue": {
        "type": "object",
        "properties": {
          "DisplayText": {
            "type": "string",
            "nullable": true
          },
          "Value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}